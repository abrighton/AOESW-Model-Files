subsystem = AOESW
component = aosq

subscribe {
  events = [
    //AOESW
    {
      subsystem = AOESW
      component = rpg
      name = state
    }
    {
      subsystem = AOESW
      component = rpg
      name = statistics
    }
    {
      subsystem = AOESW
      component = rpg
      name = progress
    }
    {
      subsystem = AOESW
      component = psfr
      name = state
    }
    {
      subsystem = AOESW
      component = psfr
      name = progress
    }
    {
      subsystem = IRIS
      component = rotator-assembly
      name = state
    }
    //CSRO Environment
    {
      subsystem = IRIS
      component = csro-env-assembly
      name = state
      usage = "It is TBD whether AOSQ will be responsible for coordinating the activities of the OIWFS enclosure when IRIS is connected to NFIRAOS. Regardless, it may be a good idea to monitor the state of this assembly."
    }
    //OIWFS POA
    {
      subsystem = IRIS
      component = oiwfs-poa-assembly
      name = state
    }
    {
      subsystem = IRIS
      component = oiwfs-poa-assembly
      name = POS_state
    }
    {
      subsystem = IRIS
      component = oiwfs-detector-assembly
      name = state
    }
    //OIWFS Detector
    {
      subsystem = IRIS
      component = oiwfs-poa-assembly
      name = MODE_state
    }

    //OIWFS ADC
    {
      subsystem = IRIS
      component = oiwfs-adc-assembly
      name = state
    }
    //IRIS ODGW
    {
      subsystem = IRIS
      component = imager-odgw-assembly
      name = state
    }
    //IRIS ADC
    {
      subsystem = IRIS
      component = sci-adc-assembly
      name = state
      usage = "While the AOSQ does not control this assembly, it may consider monitoring its state when assessing the health of the AO system. The assembly cmd attribute should be in CONTINUOUS mode and onTarget true for the ODGWs to function properly."
    }
    {
      subsystem = IRIS
      component = sci-adc-assembly
      name = PRISM_state
      usage = "While the AOSQ does not control this assembly, it may consider monitoring its state when assessing the health of the AO system. This event can be used for further trouble-shooting if a problem is noted in the overall state event."
    }
    {
      subsystem = IRIS
      component = sci-adc-assembly
      name = RETRACT_state
      usage = "While the AOSQ does not control this assembly, it may consider monitoring its state when assessing the health of the AO system. This event can be used for further trouble-shooting if a problem is noted in the overall state event."
    }
    //IRIS coldstop
    {
      subsystem = IRIS
      component = coldstop-assembly
      name = state
      usage = "While the AOSQ does not control this assembly, it may consider monitoring its state when assessing the health of the AO system. The cold stop cmd attribute should be in CONTINUOUS mode and onTarget for the ODGWs to function properly."
    }

    // NFIRAOS at
    {
      subsystem  = NFIRAOS
      component  = at
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = at
      name       = DEPLOY_state
    }
    {
      subsystem  = NFIRAOS
      component  = at
      name       = SOURCE_state
    }

    // NFIRAOS bs
    {
      subsystem  = NFIRAOS
      component  = bs
      name       = state
    }

    // NFIRAOS dm
    {
      subsystem  = NFIRAOS
      component  = dm
      name       = state
    }

    // NFIRAOS ee
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = serverOperation
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = nccServerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = nccBackupServerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = hrwfServerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = enclosureHumidityLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = enclosureTemperatureLimit 
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = coolerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = envControllerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = safetyControllerTemperatureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = ee
      name       = actuatorTemperatureLimit 
    }
    
    // NFIRAOS encl
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = portGate
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = inputShutter
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = coolingConditions
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = refrigerantLeak
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = smoke
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = interiorPressureLimit
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = tableDewFrostLimit
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = panelDewFrostLimit
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = instPortDewFrostLimit
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = ahuDewFrostLimit
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = maintenanceRequired
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = carbonDioxideLevel
    }
    {
      subsystem  = NFIRAOS
      component  = encl
      name       = oxygenLevel
    }

    // NFIRAOS ism
    {
      subsystem  = NFIRAOS
      component  = ism
      name       = state
    }

    // NFIRAOS lgsTrombone
    {
      subsystem  = NFIRAOS
      component  = lgsTrombone
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = lgsTrombone
      name       = sodiumLayer
    }
    {
      subsystem  = NFIRAOS
      component  = lgsTrombone
      name       = trackingError
    }

    // NFIRAOS lgsWfs
    {
      subsystem  = NFIRAOS
      component  = lgsWfs
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = lgsWfs
      name       = temperatureLimit
    }

    // NFIRAOS ngsAdc
    {
      subsystem  = NFIRAOS
      component  = ngsAdc
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = ngsAdc
      name       = trackingError
    }

    // NFIRAOS ngsFieldStop
    {
      subsystem  = NFIRAOS
      component  = ngsFieldStop
      name       = state
    }

    // NFIRAOS ngsFsm
    {
      subsystem  = NFIRAOS
      component  = ngsFsm
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = ngsFsm
      name       = ditherFreqError
    }
    {
      subsystem  = NFIRAOS
      component  = ngsFsm
      name       = modulationFreqError
    }

    // NFIRAOS ngsSsm
    {
      subsystem  = NFIRAOS
      component  = ngsSsm
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = ngsSsm
      name       = trackingError
    }

    // NFIRAOS nsen
    {
      subsystem  = NFIRAOS
      component  = nsen
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = nsen
      name       = BENCH_state
    }
    {
      subsystem  = NFIRAOS
      component  = nsen
      name       = ACQ_state
    }

    // NFIRAOS power
    {
      subsystem  = NFIRAOS
      component  = power
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = power
      name       = powerBarStateX
    }
    {
      subsystem  = NFIRAOS
      component  = power
      name       = powerDistUnitClean
    }
    {
      subsystem  = NFIRAOS
      component  = power
      name       = powerDistUnitDirty1
    }
    {
      subsystem  = NFIRAOS
      component  = power
      name       = powerDistUnitDirty2
    }
    {
      subsystem  = NFIRAOS
      component  = power
      name       = powerDistUnitUPS
    }

    // NFIRAOS pwfs
    {
      subsystem  = NFIRAOS
      component  = pwfs
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = pwfs
      name       = temperatureLimit
    }

    // NFIRAOS rtc
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = turbLgs
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = turbNgs
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = calibWc
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = calibDetector
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = config
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = mode
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = inst
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsFocus
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsState
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsfPointOffset
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loop
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = m1Scallop
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = odgwImage
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = odgwState
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = oiwfsImage
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = oiwfs1Poa
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = oiwfs2Poa
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = oiwfs3Poa
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = oiwfsState
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = sim
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = psfrDataReady
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pupilCentError
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsTtf
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsState
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = telOffloadTt
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = telOffloadFocus
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = telOffloadMag
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = telOffloadMode
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pipelineDelay
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsDitherTimeout
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lotLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lotfLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lotDegrade
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loDegrade
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loPwfsLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loCorrectionLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = hoCorrectionLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = loErrVectLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = hoErrVectLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = ttsSenseLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = dm0Clip
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = dm11Clip
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsTtConvergeError
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsFocusConvergeError
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsTtCorrectionLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsTtSenseLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsFocusCorrectionLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsPolGradLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lgsDmShapeLost
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsGradMissing
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsGradOrder
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pwfsGradCrc
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = dmVectMissing
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = dmVectOrder
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = dmVectCrc
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = guardRow
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = lowFlux
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pixelMissing
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pixelOrder
    }
    {
      subsystem  = NFIRAOS
      component  = rtc
      name       = pixelCrc
    }

    // NFIRAOS rtcRole
    {
      subsystem  = NFIRAOS
      component  = rtcRole
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = rtcRole
      name       = servers
    }

    // NFIRAOS ssLgs
    {
      subsystem  = NFIRAOS
      component  = ssLgs
      name       = state
    }

    // NFIRAOS ssNgs
    {
      subsystem  = NFIRAOS
      component  = ssNgs
      name       = state
    }

    // NFIRAOS timing
    {
      subsystem  = NFIRAOS
      component  = timing
      name       = state
    }
    {
      subsystem  = NFIRAOS
      component  = timing
      name       = timingGeneratorError
    }
    {
      subsystem  = NFIRAOS
      component  = timing
      name       = lgsWfs
    }

    // NFIRAOS tts
    {
      subsystem  = NFIRAOS
      component  = tts
      name       = state
    }

  ]
}
